/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

 public ListNode removeNthFromEnd(ListNode head, int n) {
//first pointer
    ListNode dummy = new ListNode(0);
    //start it from the beginning
    dummy.next = head;

    int length  = 0;
    //copy of head one on one.
    ListNode first = head;

    //find the length
    while (first != null) {
        length++;
        first = first.next;
    }

    //find cut off point
    length -= n;

    first = dummy;
//move until to the chop off point.
     while (length > 0) {
        length--;
        first = first.next;
    }
  //Bounce off the node from the list by replacing it with a new one
    first.next = first.next.next;
     
    return dummy.next;
}
}