/*Hidden tests:
6: "A!! AA[]z" 7:" ss " 8:"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWX" 9:"aa bbb ccc dddd eeeee" 10:"ab-CDE-fg_hi"
*/

String longestWord(String text) {

String result="";
String current="";
int longest=0;
StringBuilder Inner = new StringBuilder();

//Replace multiple spaces with one.
text = text.replaceAll(" +", " ");


   for(Character let1 : text.toCharArray())
    {
        Character replace = let1;
        if(Character.isLetter(replace))
        {
            Inner.append(replace);
        }else
        {
            Inner.append(" ");
        }
    }
    text = Inner.toString();
    String[] Checker= text.split(" ");



for(int i=0;i<Checker.length;i++)
{
    current = Checker[i];


    if(Checker[i].length()>longest)
    {
    longest=Checker[i].length();
    result=Checker[i];
    }

}


    System.out.println("Result is "+Checker[0]);


return result;
}

//Good alternative for sane regex
String longestWord2(String text) {
    var s = text.split("[^a-zA-Z]");
    String t = "";
    for(int i = 0; i < s.length;i++){
        if(s[i].length() > t.length() )
            t = s[i];
    }
    return t;
}
